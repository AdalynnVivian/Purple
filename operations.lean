prelude
set_option pp.beta true

noncomputable theory

universes u v w

notation `Prop` := Sort 0
notation `ùîπ` := Prop
notation f ` $ `:1 a:0 := f a

@[reducible] def out_param (Œ±: Sort u): Sort u := Œ±

class has_bot(Œ±: out_param $ Sort u) :=
  (bot: Œ±)
notation `‚ä•` := has_bot.bot
class has_top(Œ±: out_param $ Sort u) :=
  (top: Œ±)
notation `‚ä§` := has_top.top
class has_emptyc(Œ±: out_param $ Sort u) :=
  (emptyc: Œ±)
notation `‚àÖ` := has_emptyc.emptyc
class has_zero(Œ±: Type u) :=
  (zero: Œ±)
class has_one(Œ±: Type u) :=
  (one: Œ±)
--

class has_inv(Œ±: Sort u)(Œ≤: out_param $ Sort v) :=
  (inv: Œ± ‚Üí Œ≤)
postfix `‚Åª¬π`:1034 := has_inv.inv
class has_postfix_ast(Œ±: Sort u)(Œ≤: out_param $ Sort v) :=
  (postfix_ast: Œ± ‚Üí Œ≤)
postfix `*`:1034 := has_postfix_ast.postfix_ast
class has_postfix_question_mark(Œ±: Sort u)(Œ≤: out_param $ Sort v) :=
  (postfix_question_mark: Œ± ‚Üí Œ≤)
postfix `?`:1034 := has_postfix_question_mark.postfix_question_mark

-- Function composition doesn't want to work

class has_add(Œ±: Sort u)(Œ≤: Sort v)(Œ≥: out_param $ Sort w) :=
  (add: Œ± ‚Üí Œ≤ ‚Üí Œ≥)
infixl ` + `:65 := has_add.add

class has_eq(Œ±: Sort u)(Œ≤: Sort v)(Œ≥: out_param $ Sort w) :=
  (eq: Œ± ‚Üí Œ≤ ‚Üí Œ≥)
infix ` = `:50 := has_eq.eq
class has_ne(Œ±: Sort u)(Œ≤: Sort v)(Œ≥: out_param $ Sort w) :=
  (ne: Œ± ‚Üí Œ≤ ‚Üí Œ≥)
infix ` ‚â† `:50 := has_ne.ne

class has_lnot(Œ±: Sort u)(Œ≤: out_param $ Sort v) :=
  (lnot: Œ± ‚Üí Œ≤)
prefix `¬¨`:40 := has_lnot.lnot

class has_wedge(Œ±: Sort u)(Œ≤: Sort v)(Œ≥: out_param $ Sort w) :=
  (wedge: Œ± ‚Üí Œ≤ ‚Üí Œ≥)
infixl ` ‚àß `:35 := has_wedge.wedge
class has_times(Œ±: Sort u)(Œ≤: Sort v)(Œ≥: out_param $ Sort w) :=
  (times: Œ± ‚Üí Œ≤ ‚Üí Œ≥)
infixl ` √ó `:35 := has_times.times

class has_vee(Œ±: Sort u)(Œ≤: Sort v)(Œ≥: out_param $ Sort w) :=
  (vee: Œ± ‚Üí Œ≤ ‚Üí Œ≥)
infixl ` ‚à® `:30 := has_vee.vee
class has_oplus(Œ±: Sort u)(Œ≤: Sort v)(Œ≥: out_param $ Sort w) :=
  (oplus: Œ± ‚Üí Œ≤ ‚Üí Œ≥)
infixl ` ‚äï `:30 := has_times

class has_longrightarrow(Œ±: Sort u)(Œ≤: Sort v)(Œ≥: out_param $ Sort w) :=
  (longrightarrow: Œ± ‚Üí Œ≤ ‚Üí Œ≥)
infixr ` ‚ü∂ `:25 := has_longrightarrow.longrightarrow
class has_hookrightarrow(Œ±: Sort u)(Œ≤: Sort v)(Œ≥: out_param $ Sort w) :=
  (hookrightarrow: Œ± ‚Üí Œ≤ ‚Üí Œ≥)
infixr ` ‚Ü™ `:25 := has_hookrightarrow.hookrightarrow
class has_twoheadrightarrow(Œ±: Sort u)(Œ≤: Sort v)(Œ≥: out_param $ Sort w) :=
  (twoheadrightarrow: Œ± ‚Üí Œ≤ ‚Üí Œ≥)
infixr ` ‚Ü† `:25 := has_twoheadrightarrow.twoheadrightarrow
class has_rightarrowtail(Œ±: Sort u)(Œ≤: Sort v)(Œ≥: out_param $ Sort w) :=
  (rightarrowtail: Œ± ‚Üí Œ≤ ‚Üí Œ≥)
infixr ` ‚Ü£ `:25 := has_rightarrowtail.rightarrowtail
class has_twoheadrightarrowtail(Œ±: Sort u)(Œ≤: Sort v)(Œ≥: out_param $ Sort w) :=
  (twoheadrightarrowtail: Œ± ‚Üí Œ≤ ‚Üí Œ≥)
infixr ` ‚§ñ `:25 := has_twoheadrightarrowtail.twoheadrightarrowtail

class has_leftrightarrow(Œ±: Sort u)(Œ≤: Sort v)(Œ≥: out_param $ Sort w) :=
  (leftrightarrow: Œ± ‚Üí Œ≤ ‚Üí Œ≥)
infix ` ‚Üî `:20 := has_leftrightarrow.leftrightarrow

